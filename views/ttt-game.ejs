<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tic Tac Toe</title>
    <style>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      .app {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto 1fr;
        height: 80vmin;
        margin: 1rem auto;
        width: 80vmin;
      }
      .header {
        display: flex;
        justify-content: space-between;
        padding: 1rem 0;
      }
      .btn-reset {
        -webkit-appearance: none;
        padding: 1rem;
        background: lightgrey;
        border: none;
        color: black;
        cursor: pointer;
        transition: 200ms;
      }
      .btn-reset:hover {
        background: grey;
        color: lightgrey;
      }
      .board {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr 1fr 1fr;
      }
      .square {
        -webkit-appearance: none;
        border: none;
        border-right: 1px solid black;
        border-bottom: 1px solid black;
        border-radius: 0;
        color: black;
        cursor: pointer;
        font-size: 20vmin;
        outline: none;
        transition: 200ms;
      }
      .square:nth-child(3n) {
        border-right: none;
      }
      .square:nth-child(n + 7) {
        border-bottom: none;
      }
      .square:hover {
        background: lightgrey;
      }
      .square:disabled {
        color: black;
      }
    </style>
  </head>
  <body>
    <div class="app" id="app">
      <div class="header">
        <div>
          <p>Game ID: <strong>{{ gameID }}</strong></p>
          <h2>{{ playerString }}</h2>
          <p>
            {{ ready ? turnString : 'Waiting for another player...' }}
          </p>
        </div>
        <button class="btn-reset" @click="reset">Reset</button>
      </div>
      <div class="board">
        <button
          class="square"
          @click="move(index)"
          :disabled="!yourTurn"
          :key="index"
          v-for="(symbol, index) in board"
        >
          {{ symbol }}
        </button>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script>
      const GAME_ID = '<%= gameID %>';

      const socket = io();
      socket.emit('join', 'ttt');

      const app = new Vue({
        el: '#app',
        computed: {
          playerString() {
            if (this.symbol) {
              return `You are "${this.symbol}"`;
            } else {
              return 'You are spectating';
            }
          },
          turnString() {
            if (this.yourTurn) return 'It is your turn.';
            if (this.symbol) return 'Please wait for your turn.';
            return '';
          },
        },
        data: {
          board: [],
          gameID: GAME_ID,
          symbol: null,
          yourTurn: false,
          ready: false,
        },
        methods: {
          move(index) {
            if (this.yourTurn) {
              socket.emit('move', index);
            }
          },
          reset() {
            socket.emit('reset');
          },
        },
      });

      socket.on('ready', (isReady) => {
        app.ready = isReady;
      });

      socket.on('symbol', (s) => {
        app.symbol = s;
      });

      socket.on('board', ({ board }) => {
        app.board = board;
      });

      socket.on('turn', ({ yourTurn }) => {
        app.yourTurn = yourTurn;
      });
    </script>
  </body>
</html>
